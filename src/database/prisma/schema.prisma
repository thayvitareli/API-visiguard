// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(100)
  password  String @db.VarChar(75)
  CPF       String @unique @db.Char(11)
  privilege Int    @db.TinyInt

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  report     report[]
}

model vehicle {
  id    Int    @id @default(autoincrement())
  plate String @db.Char(7)
  type  Int    @db.TinyInt
  brand String @db.VarChar(75)
  model String @db.VarChar(75)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model suplier {
  id     Int     @id @default(autoincrement())
  name   String  @db.VarChar(75)
  phone  String  @db.Char(11)
  status Boolean
  CNPJ   String  @unique @db.Char(14)

  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  check_in_out_suplier check_in_out_suplier[]
}

model visitor {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(75)
  phone String @db.Char(14)
  rg    String @unique @db.VarChar(20)

  created_at           DateTime               @default(now())
  updated_at           DateTime               @updatedAt
  check_in_out_visitor check_in_out_visitor[]
}

model collaborator {
  id              Int    @id @default(autoincrement())
  name            String @db.VarChar(75)
  register_employ String @unique @db.Char(75)
  position        Int    @db.TinyInt
  department      Int    @db.TinyInt

  created_at                DateTime                    @default(now())
  updated_at                DateTime                    @updatedAt
  check_in_out_Collaborator check_in_out_collaborator[]
}

model delivery_received {
  id                   Int      @id @default(autoincrement())
  name_delivery_person String   @db.VarChar(75)
  type                 Int      @db.TinyInt
  date                 DateTime
  Observation          String   @db.Text

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model report {
  id          Int    @id @default(autoincrement())
  description String @db.Text

  user_id Int
  user    user @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model check_in_out_visitor {
  id             Int       @id @default(autoincrement())
  date_check_in  DateTime  @db.DateTime()
  date_check_out DateTime?
  plate          String?   @db.VarChar(7)

  visitor_id Int
  visitor    visitor @relation(fields: [visitor_id], references: [id])
}

model check_in_out_collaborator {
  id             Int       @id @default(autoincrement())
  date_check_in  DateTime  @db.DateTime()
  date_check_out DateTime?
  plate          String?   @db.VarChar(7)

  collaborator_id Int
  collaborator    collaborator @relation(fields: [collaborator_id], references: [id])
}

model check_in_out_suplier {
  id             Int       @id @default(autoincrement())
  date_check_in  DateTime  @db.DateTime()
  date_check_out DateTime?
  plate          String?   @db.VarChar(7)
  name_employee  String    @db.VarChar(75)
  rg_empoyee     String    @db.VarChar(20)

  suplier_id Int
  suplier    suplier @relation(fields: [suplier_id], references: [id])
}
